
* DONE 实验十
  CLOSED: [2017-03-21 Tue 17:14]
** 1. 求二重积分
*** (1)
**** CODE
#+BEGIN_SRC octave
clear
syms x y;
f = x / (1+x*y);
int(int(f, y, 0, 1), x, 0，1)
#+END_SRC
**** ANS
     log(4)-1
*** (2)
**** CODE
#+BEGIN_SRC octave
clear
syms a b;
[a, b] = solve(b==a*a+1,b==2*a, a, b);
syms x y;
f = x / (1+y);
int(int(f, y, x*x+1, 2*x), x, 0, a)
#+END_SRC
**** ANS
     log((2*3^(7/8))/9) + 1/2
*** (3)
**** CODE
#+BEGIN_SRC octave
clear
syms x y;
f = 1 - x - y;
int(int(f,y, 1-x, 0), x, 0, 1)
#+END_SRC
**** ANS
     -1/6
** 2. 化下列二次积分为极坐标的二次积分，并计算积分值.
*** (1)
**** CODE
#+BEGIN_SRC octave
clear
syms r f;
int(int(r*r*r, r, 0, sqrt(2)), f, 0, pi/4)
#+END_SRC
**** ANS
     pi/4
*** (2)
**** CODE
#+BEGIN_SRC octave
clear
syms r f;
int(int(1, r, 0, sin(f)/(cos(f)*cos(f))), f, 0, pi/4)
#+END_SRC
**** ANS
     sqrt(2) - 1
*** (3)
**** CODE
#+BEGIN_SRC octave
clear
syms r f;
int(int(1/(r*r), r, 1/(sin(f)+cos(f)), 1), f, 0, pi/2)
#+END_SRC
**** ANS
     2-pi/2
*** (4)
#+BEGIN_SRC octave
clear
syms r f;
int(int(tan(f)*r*r, r, 1/cos(f), 2/cos(f)), f, 0, pi/4)
#+END_SRC
**** ANS
     (14*2^(1/2))/9 - 7/9
** 3. 求下列图形的面积
*** (1)
**** CODE
#+BEGIN_SRC octave
clear
syms r f;
int(int(r, r, 0, cos(3*f)), f, -pi/3, pi/3)
#+END_SRC
**** ANS
     pi/6
*** (2)
**** CODE
#+BEGIN_SRC octave
clear
syms r f;
int(int(r, r, 0, 1-sin(f)), f, 0, 2*pi)
#+END_SRC
**** ANS
     (3*pi)/2
*** (3)
**** CODE
#+BEGIN_SRC octave
clear
syms r f;
int(int(r, r, 1-sin(f), cos(3*f)), f, -pi/3, pi/3)
#+END_SRC
**** ANS
     3^(1/2)/8 - pi/3
*** (4)
**** CODE
#+BEGIN_SRC octave
clear
syms r f;
int(int(r, r, 1, 3), f, 0, 1/3) ...
 + int(int(r, r, 1, 1/f), f, 1/3, 1) ...
 + int(int(r, r, 1/f, pi/2), f, 1, pi/2)
#+END_SRC
**** ANS
     (pi^2*(pi/2 - 1))/8 + 1/pi + 3/2
* DONE 实验十一
  CLOSED: [2017-03-21 Tue 18:17]
** 1.
**** CODE
#+BEGIN_SRC octave
clear
syms x y z;
f = x*y*y*z*z*z;
int(int(int(f, y, x, z/x), x, sqrt(z), 1), z, 0, 1)
#+END_SRC
**** ANS
     -1/364
** 2.
**** CODE
#+BEGIN_SRC octave
clear
syms r f z;
int(int(int(r*z, r, 0, sqrt(z)), f, 0, 2*pi), z, 1, 2)
#+END_SRC
**** ANS
     (7*pi)/3
** 3.
*** CODE
#+BEGIN_SRC octave
clear
syms x y z;
f = (1/(1+x+y+z))^3
int(int(int(f, y, 0, 1-z-x), x, 0, 1-z), z, 0, 1)
#+END_SRC
**** ANS
     log(2)/2 - 5/16
** 4.
**** CODE
#+BEGIN_SRC octave
clear
syms x y z;
f = x*z;
int(int(int(f, z, 0, y), y, x*x, 1), x, -1, 1)
#+END_SRC
**** ANS
     0
** 5.
*** (1)
**** CODE
#+BEGIN_SRC octave
clear
syms r f z;
int(int(int(z, z, r*r, sqrt(2-r*r))*r, r, 0, 1), z, 0, 2*pi)
#+END_SRC
**** ANS
     (7*pi)/12
*** (2)
**** CODE
#+BEGIN_SRC octave
clear
syms r f z;
int(int(int(r*r, z, 2, r*r/2)*r, r, 2, 0), f, 0, 2*pi)
#+END_SRC
**** ANS
     (16*pi)/3
** 6.
*** (1)
**** CODE
#+BEGIN_SRC octave
clear
syms r f t;
int(int(int(r*r*sin(f), r, 0, 1), f, 0, pi), t, 0, 2*pi)
#+END_SRC
**** ANS
     (4*pi)/3
*** (2)
**** CODE
#+BEGIN_SRC octave
clear
syms r f t a;
int(int(int(r*cos(f)*r*r*sin(f), r, 0, 2*a*cos(f)), f, pi/4, pi/2), t, 0, 2*pi)
#+END_SRC
**** ANS
     (pi*a^4)/6
* DONE 实验十二
  CLOSED: [2017-03-21 Tue 20:01]
** 1.
**** CODE
#+BEGIN_SRC octave
clear
syms t;
f = t*(2/3)*sqrt(2*t*t*t)*(1/2)*t*t;
int(f*(t+1), t, 0, 1)
#+END_SRC
**** ANS
     (16*2^(1/2))/143
** 2.
**** CODE
#+BEGIN_SRC octave
clear
syms t a;
int(sqrt(2)*(a^3)*((1-cos(t))^(3/2)), t, 0, 2*pi)
#+END_SRC
**** ANS
     int(2^(1/2)*a^3*(1 - cos(t))^(3/2), t, 0, 2*pi)
** 3.
**** CODE
#+BEGIN_SRC octave
clear
syms t a b;
f = a^2 * cos(t) * sin(t) * b * t;
int(f*sqrt(a^2+b^2), t, 0, 2*pi)
#+END_SRC
**** ANS
     -(pi*a^2*b*(a^2 + b^2)^(1/2))/2
** 4.
**** CODE
#+BEGIN_SRC octave
clear
syms t a;
int(a*a, t, -pi/2, pi/2)
#+END_SRC
**** ANS
     pi*a^2
** 5.
#+BEGIN_SRC octave
clear
syms t a;
4*int((a^(4/3)-2*a^(4/3)*cos(t)^2*sin(t)^2)*3*a*sin(t)*cos(t), t, 0, pi/2)
#+END_SRC
**** ANS
     4*a^(7/3)
** 7.
#+BEGIN_SRC octave
clear
syms x a;
I1 = int(x^2, x, 0, 2);
I2 = int(sqrt(2)*(2*x^2-4*x+4), x, 2, 1);
I3 = int(sqrt(2)*(2*x^2), x, 1, 0);
I = I1 + I2 + I3
#+END_SRC
**** ANS
     8/3 - (10*2^(1/2))/3
** 8.
**** CODE
#+BEGIN_SRC octave
% 口算
-1/6*a^2*2*pi*a
#+END_SRC
**** DONE ANS
     CLOSED: [2017-03-21 Tue 20:01]
     -1/3*pi*a^3
* DONE 实验十三
  CLOSED: [2017-03-22 Wed 08:26]
** 1.
**** CODE
#+BEGIN_SRC octave
clear
syms t a
I1 = int((a+a*sin(t))*a*(1-cos(t)), t, 0, 2*pi);
I2 = int(a*sin(t), t, 0, 2*pi);
I = I1 + I2
#+END_SRC
**** ANS
     2*pi*a^2
** 2.
**** CODE
#+BEGIN_SRC octave
clear
syms t a
int(sin(2*t), t, 0, 2*pi)
#+END_SRC
**** ANS
     0
** 3.
**** CODE
#+BEGIN_SRC octave
clear
syms t a
I1 = int(t+1, t, 0, 1);
I2 = int(t+2, t, 0, 1);
I3 = int(t+3, t, 0, 1);
I = I1 + I2 + I3
#+END_SRC
**** ANS
     15/2
** 4.
**** CODE
#+BEGIN_SRC octave
clear
syms x
I1 = int(x^2-2*x^3, x, 1, -1);
I2 = int(2*x*(x^4-2*x^3), x , 1, -1);
I = I1 + I2
#+END_SRC
**** ANS
     14/15
** 5.
**** CODE
#+BEGIN_SRC octave
clear
syms t a
I1 = int(exp(-t)*exp(t), t, 0, 1);
I2 = int(exp(t)*exp(-t), t, 0, 1);
I3 = int(exp(2*t)+exp(-2*t)*a, t, 0, 1);
I = I1 + I2 + I3
#+END_SRC
**** ANS
     (exp(-2)*(a + exp(2))*(exp(2) - 1))/2 + 2
** 6.
**** CODE
#+BEGIN_SRC octave
clear
syms x y
I1 = int(x^2, x, 1, 2);
I2 = int(4-y^2, y, 0, 1);
I3 = int(x^2+1, x , 2, 1);
I4 = int(1-y^2, y, 1, 0);
I = I1 + I2 + I3 + I4
#+END_SRC
**** ANS
     2
** 7.
**** CODE
#+BEGIN_SRC octave
clear
syms t
3*int(-(sin(t)^3+cos(t)^3), t, 0, pi/2)
#+END_SRC
**** ANS
     -4
** 8.
*** (1)
**** CODE
#+BEGIN_SRC octave
clear
syms x
I1 = int(x-2*x^5, x, 0, 1);
I2 = int(2*x*(x^2-2*x^4), x, 0, 1);
I = I1 + I2
#+END_SRC
**** ANS
     0
*** (2)
**** CODE
#+BEGIN_SRC octave
clear
syms x
I11 = int(2*x, x, 0, 1);
I12 = int(2, x, 1, 2);
I21 = int(x^2, x, 0, 1);
I22 = int(x^2-2*x, x, 1, 2);
I = I11 + I12 + I21 + I22
#+END_SRC
**** ANS
     8/3
* DONE 实验十四
  CLOSED: [2017-03-22 Wed 14:33]
** 1.
*** (1)
**** CODE
#+BEGIN_SRC octave
clear
syms r f z;
int(int(int(r, r, 0, sqrt(2-z)), f, 0, pi/2), z, 0, 2)
#+END_SRC
**** ANS
     pi/2
*** (2)
**** CODE
#+BEGIN_SRC octave
clear
syms r f z;
int(int(int(r^3, r, 0, sqrt(2-z)), f, 0, pi/2), z, 0, 2)
#+END_SRC
**** ANS
     pi/3
*** (3)
**** CODE
#+BEGIN_SRC octave
clear
syms r f z;
int(int(int(3*z*r, r, 0, sqrt(2-z)), f, 0, pi/2), z, 0, 2)
#+END_SRC
**** ANS
     pi
** 2.
*** (1)
**** CODE
#+BEGIN_SRC octave
clear
syms r f;
I1 = int(int(sqrt(2)*r^3, r, 0, 1), f, 0, 2*pi);
I2 = int(int(r^3, r, 0, 1), f, 0, 2*pi);
I = I1 + I2
#+END_SRC
**** ANS
     pi/2 + (pi*2^(1/2))/2
*** (2)
**** CODE
#+BEGIN_SRC octave
clear
syms r f;
int(int(2*r, r, 0, 1), f, 0, 2*pi)
#+END_SRC
**** ANS
     2*pi
** 3.
*** (1)
**** CODE
#+BEGIN_SRC octave
clear
syms x y;
z = 4-2*x-4/3*y;
int(int((z+2*x+4/3*y)*sqrt(1+4+16/9), x, 0, 2), y, 0, 3)
#+END_SRC
**** ANS
     8*61^(1/2)
*** (2)
**** CODE
#+BEGIN_SRC octave
clear
syms x y;
z = 6-2*x-2*y;
int(int(3*(2*x*y-2*x^2-x+z), x, 0, 3), y, 0, 3)
#+END_SRC
**** ANS
     -81
*** (3)
#+BEGIN_SRC octave
clear
syms r f a h;
sqrt(a^2-h^2)*int(int(r, r, 0, sqrt(a^2-h^2)), f, 0, 2*pi)
#+END_SRC
**** ANS
     pi*(a^2 - h^2)^(3/2)
* TODO 实验十五
** 1.
**** CODE
#+BEGIN_SRC octave
clear
syms r f R
int(int(r^4*sin(f)^2*cos(f)^2*sqrt(R^2-r^2), r, 0, R), f, 0, 2*pi)
#+END_SRC
**** ANS
     (R^6*pi^2)/128
** 2.
**** CODE
#+BEGIN_SRC octave
clear
syms x y z
I1 = int(int(sqrt(1-y^2), y, 0, 1), z, 0, 3);
I2 = int(int(sqrt(1-x^2), x, 0, 1), z ,0 ,3);
I = I1 + I2
#+END_SRC
**** ANS
     (3*pi)/2
** TODO 3.
**** CODE
#+BEGIN_SRC octave
clear
syms x y z

#+END_SRC
**** ANS
** 4.
**** CODE
#+BEGIN_SRC octave
clear
syms x y
3*int(int(x*(1-x-y), x, 0, 1), y, 1, 0)
#+END_SRC
**** ANS
     1/4
** TODO 5.
*** (1)
**** CODE
#+BEGIN_SRC octave
clear
syms x y

#+END_SRC
**** ANS
*** (2)
**** CODE
#+BEGIN_SRC octave
clear
syms x y

#+END_SRC
**** ANS
** 6.
**** CODE
#+BEGIN_SRC octave
clear
syms r f e
int(int(e^2, r, 1, 2), f, 0, 2*pi)
#+END_SRC
**** ANS
     2*pi*e^2
* DONE 实验十九
  CLOSED: [2017-03-22 Wed 16:11]
** 1.
*** 例1
**** CODE
#+BEGIN_SRC octave
clear
P1 = hygecf(10, 1000, 300, 50)
X = hygeinv(P1, 1000, 300, 50)
P2 = hygepdf(10, 1000, 300, 50)
x = 1:50;
Px1 = hygecdf(x, 1000, 300, 50);
Px2 = hygepdf(x, 1000, 300, 50);
stairs(x, Px1);
figure(1)
stairs(x, Px2);
#+END_SRC
*** 例2
**** CODE
#+BEGIN_SRC octave
clear
X = binornd(20, 0.2)
[p, pci] = binofit(X, 20)
#+END_SRC
*** 例3
**** CODE
#+BEGIN_SRC octave
clear
x = 0:20;
P1 = hygepdf(x, 2000, 30, 100);
P2 = binopdf(x, 100, 0.015);
P3 = poisspdf(x, 1.5);
subplot(3, 1, 1)
plot(x, P1, '+')
title('hygepdf');
subplot(3,1,2)
plot(x, P2, '*')
title('binopdf')
subplot('3,1,3')
plot(x, P3, '.')
title('poisspdf')
#+END_SRC
** 2.
**** CODE
#+BEGIN_SRC octave
clear
% 第一小题
P1 = binopdf(45, 100, 0.5)
P2 = binocdf(45, 100, 0.5)
% 第二小题
x = 0:100;
Px1 = binocdf(x, 100, 0.5);
Px2 = binopdf(x, 100, 0.5);
stairs(x, Px1);
figure(1)
stairs(x, Px2);
#+END_SRC
**** ANS
     p1 = 0.0485, p2 = 0.1841
* DONE 实验二十三
  CLOSED: [2017-03-22 Wed 16:36]
*** 计算各个统计量
**** CODE
#+BEGIN_SRC octave 
function showAll(X)
geomean(X)   % 几何均值
harmmean(X)  % 调和均值
meax(X)      % 算术平均值
median(X)    % 中位数
range(X)     % 极差
var(X)       % 方差
var(X, 1)    % 标准化方差
std(X)       % 标准差
cov(X)       % 协方差矩阵
moment(X, 1) % 1阶中心矩
moment(X, 2) % 2阶中心矩
moment(X, 3) % 3阶中心矩
moment(X, 4) % 4阶中心矩
corrcoef(X)  % 相关系数
end
#+END_SRC
*** 处理缺失数据
**** CODE
#+BEGIN_SRC octave 
function showLoss(X)
nansum(X)
nanmin(X)
nanmax(X)
nanmedian(X)
nanstd(X)
end
#+END_SRC
** 1.
**** CODE
#+BEGIN_SRC octave
% 输入矩阵
X1 = [ 1 2 4 2 ;...
      2 4 3 3 ;...
      3 3 4 4 ;...
      4 5 5 5 ]

showAll(X1) % 显示各个统计量
#+END_SRC
**** ANS
     太多了
** 2.
**** CODE
#+BEGIN_SRC octave
% 输入矩阵
X2 = (11-(1:10))' * (1:10)

showAll(X2) % 显示各个统计量
#+END_SRC
**** ANS
     太多了
** 3.
**** CODE
#+BEGIN_SRC octave
% 输入矩阵
m = magic(5);
rowNum = round(5*rand());
m(rowNum,:) = repmat([NaN], 1, 5);

showLoss(m) % 显示各个统计量
#+END_SRC
**** ANS
     太多了
* DONE 实验三十
  CLOSED: [2017-03-22 Wed 17:30]
** 1.
**** CODE
#+BEGIN_SRC octave
% 输入矩阵
X = [0.1 0.8 1.3 1.9 2.5 3.1]
y = [1.2 1.6 2.7 2.0 1.3 0.5]

% 线性插值
y1 = interp1(X, y, 2.0, 'linear')

% 三次插值
y2 = interp1(X, y, 2.0, 'pchip')       % 'cubic'将被'pchip'取代
#+END_SRC
**** ANS
     线性插值 -> y1 = 1.8833
     三次插值 -> y2 = 1.8844
** 2.
**** CODE
#+BEGIN_SRC octave
clear
% 输入矩阵
x = 0:4;
y = 0:4;
t = [ 4 0 -4 0 4 ; ...
      3 2 -2 2 3 ; ...
      2 1  0 1 2 ; ...
      3 2 -2 2 3 ; ...
      4 0 -4 0 4 ];

% 原始网格图
subplot(1, 2, 1)
mesh(x, y, t)

% 网格细化图
x1 = 0: 0.1: 4;
y1 = 0: 0.1: 4;
[x2 y2] = meshgrid(x1, y1);
t1 = interp2(x, y, t, x2, y2, 'linear');
subplot(1, 2, 2)
mesh(x1, y1, t1)
#+END_SRC
**** ANS
     图片暂无
** 3.
**** CODE
#+BEGIN_SRC octave
clear
[X,Y,Z,V] = flow(10); 

Xi = 10*rand();
Yi = -3+6*rand();
Zi = -3+6*rand();

Vi = interp3(X,Y,Z,V,Xi,Yi,Zi)
#+END_SRC
**** ANS
     -4.9971
* DONE 实验三十一
  CLOSED: [2017-03-22 Wed 18:28]
** 1.
**** CODE
#+BEGIN_SRC octave
clear
% 输入数据
x = [1.2 1.8 2.1 2.4 2.6 3.0 3.3];
y = [4.85 5.2 5.6 6.2 6.5 7.0 7.5];

% 分别生成4,5,6阶的拟合曲线
for n = 4:6
  p = polyfit(x, y, n);
  x1 = 1:0.05:3;
  y1 = polyval(p, x1);
  subplot(1,3,n-3)
  plot(x, y, ' * ', x1, y1, ':')
end
#+END_SRC
**** ANS
     图略
** 2.
**** CODE
#+BEGIN_SRC octave 
clear
% 输入数据
X = 0:24;
y = [15 14 14 14 14 15 16 18 20 22 23 25 28 ...
     31 32 31 29 27 25 24 22 20 18 17 16 ];

% 分别生成2,3,4阶的拟合曲线
for n = 2:4
  p = polyfit(X, y, n);
  X1 = 0:0.05:24;
  y1 = polyval(p, X1);
  subplot(1, 4, n-1)
  plot(X, y, ' * ', X1, y1, ':')
end

% 生成非线性拟合曲线
f = inline('c(1)*exp(-c(2)*(x-c(3)).^2)', 'c', 'x');
init_theta = [2 2 2];
Theta = lsqcurvefit(f, init_theta, X, y)
X1 = 0:0.05:24;
y1 = feval(f, Theta, X1);
subplot(1, 4, 4)
plot(X, y, ' * ', X1, y1, ':')
#+END_SRC
**** ANS
     图片略
**** NOTES
     lsqcurvefit函数根据初始值不同会获得不同的局部最优解
     随机生成初始值，多次求解最优解
* DONE 实验三十四
  CLOSED: [2017-03-22 Wed 18:48]
** 1.
**** CODE
#+BEGIN_SRC octave
clear
fun = inline('x-exp(-x)','x');
fsolve(fun, [rand()])
#+END_SRC
**** ANS
     0.5671
** 2.
**** CODE
#+BEGIN_SRC octave
clear
fun = inline('5*x^2*sin(x)-exp(-x)','x');
for i=1:10
fsolve(fun, [i])
end
#+END_SRC
**** ANS
     0.5671
** 3.
**** CODE
#+BEGIN_SRC octave
% 方程组转为函数
function y = gg(x)
y(1) = x(1)-0.7*sin(x(1))-0.2*cos(x(2));
y(2) = x(2)-0.7*cos(x(1))-0.2*sin(x(2));
end

clear
format short
x0 = [0.1 0.1]
fsolve(@gg, x0)
#+END_SRC
**** ANS
     x = 0.4442
     y = 0.7715
** 4.
**** CODE
#+BEGIN_SRC octave
clear
fun = inline('x^2*exp(-x^2)-0.2','x');
for i=-15:-15
fsolve(fun, [i])
end
#+END_SRC
**** ANS
     x1 =  0.5091
     x2 = -0.5091
     x3 =  1.5946
     x4 = -1.5946
* DONE 实验三十五
  CLOSED: [2017-03-22 Wed 20:26]
** 1.
**** CODE
#+BEGIN_SRC octave
clear
f = [ 3  2 -8  5 ];
A = [ 3 -6  5 -2 ; ...
     -7  3  1 -3 ];
b = [-3 -1];
Aeq = [1 8 1 -1];
Beq = [-2];
LB = [0; -Inf; 0; -Inf];
[X, fval] = linprog(f, A, b, Aeq, Beq, LB)
#+END_SRC
**** ANS
     x1 =  0.0000
     x2 = -0.0455
     x3 =  0.0000
     x4 =  1.6364
     fval = 8.0909
** 2.
**** CODE
#+BEGIN_SRC octave
clear
f = [ -1 1 1 1 -1 ];
Aeq = [0  0 1 0 6 ; ...
       1 -4 0 0 2 ; ...
       0  2 0 1 2];
Beq = [9 2 9];
LB = zeros(1, 5);
[X, fval] = linprog(f, [], [], Aeq, Beq, LB)
#+END_SRC
**** ANS
     x1 = 11
     x2 = 3
     x3 = 0
     x4 = 0
     x5 = 1.5
     fval = -9.5
** 3.
**** CODE
#+BEGIN_SRC octave
clear
f = [1 1 1 1 1 1 1];
A = [1 0 0 1 1 1 1 ; ...
     1 1 0 0 1 1 1 ; ...
     1 1 1 0 0 1 1 ; ...
     1 1 1 1 0 0 1 ; ...
     1 1 1 1 1 0 0 ; ...
     0 1 1 1 1 1 0 ; ...
     0 0 1 1 1 1 1 ]*(-1);
b = [16 15 16 19 14 12 18]*(-1);
LB = zeros(1, 7);
[X, fval] = linprog(f, A, b, [], [], LB)
#+END_SRC
**** ANS
     x1 = 2
     x2 = 2
     x3 = 4
     x4 = 3
     x5 = 3
     x6 = 0
     x7 = 8
     fval = 22
     开销为2200元

* DONE 实验三十六
  CLOSED: [2017-03-22 Wed 20:26]
** 1.
**** CODE
#+BEGIN_SRC octave
clear
fun = '(x^5+x^3+x^2-1)/(exp(x^2)+sin(-x))';
[X fval exitflag output] = fminbnd(fun, -5, 5)
#+END_SRC
**** ANS
     正确，不同的约束条件导致不同的最优化函数，在算法进行求导时，约束条件会改变当某个变量的偏导数为0时变量的值
** 2.
**** CODE
#+BEGIN_SRC octave
clear
fun = 'x^2+4*x+4';
[X fval exitflag output] = fminsearch(fun, 0)
#+END_SRC
**** ANS
     -2
** 3.
**** CODE
#+BEGIN_SRC octave
clear
fun = '(x-2)^4*sin(x)-(x-1)^2*cos(x)';
[X fval exitflag output] = fminbnd(fun, -10, 10)
#+END_SRC
**** ANS
      f(min) = f(-2.2939) = -247.6956
* DONE 实验三十七
  CLOSED: [2017-03-22 Wed 20:26]
** 1.
**** CODE
#+BEGIN_SRC octave
% 目标函数
function f = objfun(x)
f = 1/3*(x(1)+1)^3+x(2);
end

% 求解最优化问题
clear
x0 = [1 1];
A = [-1  0 ; ...
      0 -1 ];
b = [-1 0];
[x fval exitflag output] = fmincon(@objfun, x0, A, b)
#+END_SRC
**** ANS
     x1 = 1
     x2 = 0
     fval = 2.6667
** 2.
**** CODE
#+BEGIN_SRC octave
% 目标函数
function f = objfun(x)
f = 2*x(1)^2+2*x(x)^2-2*x(1)*x(2)-4*x(1)-6*x(2);
end

% 求解最优化问题
clear
x0 = [1 1];
A = [1 1 ; ...
     1 5 ];
b = [2 5];
lb = [0 0];
[x fval exitflag output] = fmincon(@objfun, x0, A, b, [], [], lb)
#+END_SRC
**** ANS
     x1 = 1.129
     x2 = 0.7742
     fval = -7.1613
* TODO 实验三十八
* TODO 实验四十三
** 1.
**** CODE
#+BEGIN_SRC octave
function [X] = bezier2(Vertex)
  Bcon = [  1 -2 1 ; ...
           -2  2 0 ; ...
            1  0 0 ] ;
  for i = 1:50
    par = (i-1)/49;
    XY(i,:) = [par^2 par 1] * Bcon * Vertex;
  end

  plot(Vertex(:, 1), Vertex(:, 2), 'ro', XY(:, 1), XY(:, 2), 'b-')

  line(Vertex(:, 1), Vertex(:, 2), 'color', 'g')

  xlabel(' x value')
  ylabel(' y value')
  title('Square Bezier Curve')
  legend('Vertex', 'Curve', 'Control Polygon')
end
#+END_SRC
**** ANS
     图略
** 2.
**** CODE
#+BEGIN_SRC octave
function [X] = bezier2(Vertex)
  Bcon = [  1 -2 1 ; ...
           -2  2 0 ; ...
            1  0 0 ] ;
  for i = 1:50
    par = (i-1)/49;
    XY(i,:) = [par^2 par 1] * Bcon * Vertex;
  end

  plot(Vertex(:, 1), Vertex(:, 2), 'ro', XY(:, 1), XY(:, 2), 'b-')

  line(Vertex(:, 1), Vertex(:, 2), 'color', 'g')

  xlabel(' x value')
  ylabel(' y value')
  title('Square Bezier Curve')
  legend('Vertex', 'Curve', 'Control Polygon')
end
#+END_SRC
**** ANS
** 3.
**** CODE
#+BEGIN_SRC octave
bezier3([.8 1;0 .99;0 .55; .5 .5])
hold on
bezier3([.5 .5;1 .45; 1 .01; .2 1])
#+END_SRC
**** ANS
** 4.
**** CODE
#+BEGIN_SRC octave
function [X] = bezier4(Vertex)
  Bcon = [  1 -4 6 -4 1 ; ...
            -4 12 -12 4 0; ...
            6 12 6 0 0 ; ...
            1 0 0 0 0 ] ;
  for i = 1:50
    par = (i-1)/49;
    XY(i,:) = [par^4 par^3 par^2 par 1] * Bcon * Vertex;
  end

  plot(Vertex(:, 1), Vertex(:, 2), 'ro', XY(:, 1), XY(:, 2), 'b-')

  line(Vertex(:, 1), Vertex(:, 2), 'color', 'g')

  xlabel(' x value')
  ylabel(' y value')
  title('Square Bezier Curve')
  legend('Vertex', 'Curve', 'Control Polygon')
end
#+END_SRC
**** ANS
     略
** 5.
#+BEGIN_SRC octave
bzier4([.8 1; 0 .99; .5 .5; 1 .01; .2 1])
#+END_SRC
**** ANS
